Testando cÃ³digos assÃ­ncronos

Ã‰ comum encontrar em JavaScript linhas de cÃ³digo que possuem comportamentos assÃ­ncronos. VocÃª jÃ¡ conhece dois casos em que comportamentos assÃ­ncronos acontecem: callbacks e async/await.

 Para testar esses casos, o Jest fornece algumas soluÃ§Ãµes com o objetivo de que os testes aguardem o momento em que a funÃ§Ã£o a ser testada for concluÃ­da e a informaÃ§Ã£o necessÃ¡ria for retornada, para depois executar os testes. Isso evita que falsos positivos (teste passar quando deveria falhar) aconteÃ§am e garante seguranÃ§a para a aplicaÃ§Ã£o. Hoje, vocÃª vai focar os estudos utilizando o async/await :

Async/Await: para testar funÃ§Ãµes com async e await vocÃª deve utilizar a palavra-chave async na funÃ§Ã£o passada para teste e await em algum retorno assÃ­ncrono que vocÃª estÃ¡ esperando, exatamente como vocÃª aprendeu em funÃ§Ãµes assÃ­ncronas com async/await .

A seguir vocÃª conhecerÃ¡ de forma detalhada o conceito apresentado acima. NÃ£o se preocupe, existem exemplos e exercÃ­cios para que vocÃª possa praticar e consolidar o aprendizado! ğŸ˜‰